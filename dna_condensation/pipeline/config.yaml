# DNA Condensation Quantification Configuration
# Edit the values below for your specific analysis

## DEVELOPMENT SETTINGS
dev_mode: false                 # If true, settings from dev_config.yaml will override these settings

# ==== FILE PATHS ====
# ==== INPUT SOURCE CONFIGURATION ====
input_source: "bbbc022"        # Options: "nd2" or "bbbc022"

# ND2 file processing paths
raw_nd2_path: "G:/My Drive/KatzLab/DNA-condensation-quantification/raw_nd2"  # Path to folder containing ND2 files
nd2_output_path: "./output"     # Where to save ND2 analysis results

# BBBC022 processing paths  
validation_output_path: "dna_condensation/validation/output"  # Where to save BBBC022 validation results (kept inside package tree)
temp_path: "./temp"             # Temporary processing files

# ==== ND2 SELECTION SETTINGS ====
# Controls which and how many ND2 files get processed for faster development/testing
nd2_selection_settings:
  count: null                    # Number of images to process (null = all files)
  group_filters:                 # Content-based filtering using OR logic
    ids: null                    # List of LSD1 IDs to include (e.g., ["dk16", "dk17"])
    names: null                  # List of LSD1 names to include (e.g., ["wtLSD1", "mutLSD1"])
    # OR Logic: file included if it contains ANY specified ID OR ANY specified name
    # Example: ids: ["dk16"], names: ["mutLSD1"] â†’ includes dk16_wtLSD1 OR dk17_mutLSD1 OR dk16_mutLSD1
  file_pattern_filters:          # Pattern-based filtering on full filename
    include_patterns: null       # List of patterns that must ALL be present (AND logic)
    exclude_patterns: null       # List of patterns to exclude (if ANY present, file excluded)
  seed: 42                       # Seed for reproducible balanced random sampling
  nuclear_channel_index: 1       # Expected 1 where channel 0 = GFP, channel 1 = DNA
  # Note: Always uses balanced random sampling - equal representation across ID+name groups

# ==== BBBC022 VALIDATION SETTINGS ====
bbbc022_settings:
  count: 20                     # Number of images to sample for validation
  channels: ['OrigHoechst']     # Channels to load (DNA staining)
  seed: 42                      # Random seed for reproducible sampling
  auto_group_split: false       # Set to false to use manual group mapping (automatic not yet implemented)
  nuclear_channel_index: 0      # BBBC022 images are single-channel (use 0)
  # Compounds considered as DNA-condensation-inducing treatments for grouping (case-insensitive substring match)
  treatment_compounds:
    - "staurosporine"
    - "camptothecin"
    - "10-hydroxycamptothecin"

# ==== SEGMENTATION SETTINGS ====
# Segmentation method: 'yolo' (AI-based) or 'watershed' (traditional image processing)
segmentation_method: "stardist"    # Options: "yolo", "watershed", 'otsu'

# Optional per-method tuning
segmentation_settings:
  stardist:
    nms_thresh: 0.2            # Non-maximum suppression IoU threshold. Lower merges overlapping fragments more aggressively.
                               # StarDist default is ~0.4; 0.30 is a good starting point to reduce over-splitting.
    prob_thresh: 0.75          # Detection probability threshold (null = use StarDist default)
    min_size: null             # Minimum instance size in pixels (null = use StarDist default)



# Size-based filtering (removes small objects relative to median size)
size_filtering:
  enabled: true                 # Enable/disable size-based filtering
  min_size_percentage: 30       # Minimum size as percentage of median (e.g., 20 = 20% of median)

#=== SIZE FILTERING SUMMARY EXAMPLE ===
# Original objects: 66
#  5% filter:  66 objects (  0.0% removed)
# 10% filter:  66 objects (  0.0% removed)
# 20% filter:  64 objects (  3.0% removed)
# 30% filter:  62 objects (  6.1% removed)

# Quality filtering for feature extraction (percentage-based, adaptive)
quality_filtering:
  enabled: true                 # Enable/disable quality filtering in feature extraction
  area_percentiles:             # Area-based filtering using percentiles of detected objects
    min_percentile: 1           # Minimum area (E.g. 1 is 1st percentile - very permissive for BBBC022)
    max_percentile: 99          # Maximum area (E.g. 99 is 99th percentile - very permissive for BBBC022)
  intensity_filtering:          # Intensity-based quality checks
    min_dynamic_range: 1e-6     # Minimum intensity range (max - min)
    min_mean_intensity: 1e-6    # Minimum mean intensity (avoid pure background)
    min_pixel_count: 10         # Minimum number of pixels per nucleus
  geometry_filtering:           # Basic geometry validation
    min_perimeter: 4            # Minimum perimeter (avoid degenerate shapes)

# Feature extraction configuration
feature_extraction:
  high_intensity_percentile: 90   # Percentile for high-intensity fraction calculation
  radial_shells: 5                # Number of radial shells for spatial analysis
  texture_distance: 1             # Distance for texture analysis (GLCM)
  granulometry_radii: [3, 5, 7, 10, 15]  # Radii for granulometry analysis

# ==== PROCESSING SETTINGS ====
# Preprocessing options for homogeneity analysis
preprocessing:
  background_correction: true   # Apply rolling ball background correction (RECOMMENDED)
                                  # May wish to disable because radius difficult to quantify and is slow
  bg_ball_radius: 75           # Rolling ball radius (adjust based on nucleus size)
                                  # Should always be set to be slightly larger than the
                                  # largest nucleus in your images to ensure that only the
                                  # true, large-scale background variations are removed.
                                # BBBC nuclei approximate radius upper bound: 20 px
                                # nd2 nuclei approximate radius upper bound: 


  deconvolution: false         # Apply Richardson-Lucy deconvolution (optional, slower, disabled because it may interfere with analysis)
  deconv_iterations: 10        # Deconvolution iterations

  intensity_normalization: true # Apply global intensity normalization (recommended for batch comparison)
  norm_method: "percentile"    # Normalization method: percentile, zscore, minmax, target_mean

  per_nucleus_normalization: true  # Apply per-nucleus normalization for homogeneity analysis

# Z-axis collapse method
z_collapse_method: "mean"       # Options: "max", "mean", "sum", "median"

# GPU acceleration
use_gpu: true                   # Enable GPU acceleration if available

# ==== STATISTICAL ANALYSIS SETTINGS ====
# Controls how statistical tests are performed across the entire pipeline
statistical_analysis:
  use_image_aggregation: true   # Use image-level aggregation to avoid pseudoreplication (RECOMMENDED)
                               # When true: Statistical tests use image-level medians (proper biological replicates)
                               # When false: Statistical tests use per-nucleus data (may have pseudoreplication issues)

# Plotting and visualization
plot:
  plot_segmentation: false       # Enable/disable segmentation result visualization
  single_metric_plot:
    enabled: true                # Enable/disable single metric standalone plot
    metric: null  # Metric to plot (may be none, string, or list of strings)
    # (set to null/none to disable)
    # Available metrics include:
    # Intensity: mean_intensity, std_intensity, intensity_entropy, high_intensity_fraction, etc.
    # Morphology: area, perimeter, circularity, solidity, etc.
    # Texture: glcm_homogeneity_mean, glcm_contrast_mean, glcm_energy_mean, etc.
    # Granulometry: granulometry_area_fraction_r5, granulometry_spots_r5, etc.
    # Spatial: radial_shell_0, center_to_edge_ratio, etc.
  nuclei_panel:
    enabled: true               # Enable/disable nuclei panel plot
    n_nuclei: 12                # How many nuclei to show
    metrics:                    # Metrics to annotate per nucleus
      - glcm_homogeneity_mean
      - intensity_entropy
    group: null                 # Optional group filter; null means sample randomly from all
    group_column: condition     # Which column stores group labels
    colormap: magma             # Colormap to emphasize intensity differences
    channel_index: 1            # Channel to visualize when image has multiple channels
    save_name: nuclei_panel.png # Output filename

# ==== IMAGE VISUALIZATION SETTINGS ====
# Configuration for visualize_images.py script
image_visualization:
  n_images: 6                   # Number of images to display in grid
  stages:                       # Processing stages to show (options: raw, preprocessed, final, segmentation)
    - raw
    - preprocessed 
    - segmentation
  show_segmentation_overlay: true  # Show faint segmentation overlay on segmentation stage (toggleable)
  overlay_alpha: 0.3            # Transparency of segmentation overlay (0.0=invisible, 1.0=opaque)
  contour_color: "red"          # Color for segmentation contours (red, blue, green, yellow)
  contour_width: 0.5            # Width of segmentation contour lines
  figure_size: [15, 10]         # Figure size in inches [width, height]
  colormap: "gray"              # Matplotlib colormap for image display

# Verbose output
verbose: true                   # Print detailed progress information